<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>asmt_assessable_record</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>SLX Iniciar assessment</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	//gs.addInfoMessage(gs.getPreference('recent.assessors'));
	
	
	var user = new GlideRecord("sys_user");
user.addQuery("user_name",gs.getPreference('recent.assessors'));
user.query();
if (user.next()) {
   var new_user= user.sys_id;
}

	var type_id=current.metric_type;
	var source_id= current.source_id;
	var asmtr_sys_id= current.sys_id;
	
	
	
	new SNC.AssessmentCreation().addRecentAssessor(new_user);
    var evalMethod = "";
    var instanceId = "";
    if (type_id != "" && source_id != "") //This is an assessable record
        instanceId = new SNC.AssessmentCreation().createAssessments(type_id, source_id, new_user);
    else // This is a survey or a metric type
        instanceId = new SNC.AssessmentCreation().createAssessments(asmtr_sys_id, "", new_user);

    var gr = new GlideRecord("asmt_assessment_instance");
    var success = gr.get(instanceId.substring(0, 32));
    if (success) {
        evalMethod = gr.getDisplayValue("metric_type.evaluation_method").toLowerCase();
        var infoMsg = gs.getMessage("The {0} has been assigned successfully.", evalMethod);
        gs.addInfoMessage(infoMsg);
    } else {
        var gr_metric = new GlideRecord("asmt_metric_type");
        var successMetricType = (type_id != "" && source_id != "") ? gr_metric.get(type_id) : gr_metric.get(asmtr_sys_id);
        evalMethod = successMetricType ? gr_metric.getDisplayValue("evaluation_method").toLowerCase() : '';
        if (evalMethod) {
            var errMsg = gs.getMessage("The {0} could not be assigned. For more information, contact your system administrator.", evalMethod);
            gs.addErrorMessage(errMsg);
        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>slx.bs</sys_created_by>
        <sys_created_on>2023-07-20 16:16:23</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>5fadc55b1b84f5507c132170f54bcb43</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>SLX Iniciar assessment</sys_name>
        <sys_overrides/>
        <sys_package display_value="GOP" source="x_lbsa_gop">105a39191baba11097eaea4fe54bcb53</sys_package>
        <sys_policy/>
        <sys_scope display_value="GOP">105a39191baba11097eaea4fe54bcb53</sys_scope>
        <sys_update_name>sys_script_5fadc55b1b84f5507c132170f54bcb43</sys_update_name>
        <sys_updated_by>slx.bs</sys_updated_by>
        <sys_updated_on>2023-07-20 16:24:33</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=5fadc55b1b84f5507c132170f54bcb43"/>
</record_update>
